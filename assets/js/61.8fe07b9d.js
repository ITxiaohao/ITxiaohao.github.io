(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{353:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("npm run test ，会提示有一些命令，如")]),t._v(" "),a("blockquote",[a("p",[t._v("Watch Usage")]),t._v(" "),a("p",[t._v("› Press f to run only failed tests.")]),t._v(" "),a("p",[t._v("› Press o to only run tests related to changed files.")]),t._v(" "),a("p",[t._v("› Press p to filter by a filename regex pattern.")]),t._v(" "),a("p",[t._v("› Press t to filter by a test name regex pattern.")]),t._v(" "),a("p",[t._v("› Press q to quit watch mode.")]),t._v(" "),a("p",[t._v("› Press Enter to trigger a test run.")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ITxiaohao/blog-img/master/img/Jest/20190725142651.png",alt:""}})]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toMatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.zsh.com'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zsh'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/zsh/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toContain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toContain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("throwNewErrorFunc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is a new error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toThrow'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("throwNewErrorFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toThrow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is a new error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("有三个测试用例，修改最后一个")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("throwNewErrorFunc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is a new error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toThrow'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("throwNewErrorFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toThrow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ITxiaohao/blog-img/master/img/Jest/20190725142633.png",alt:""}})]),t._v(" "),a("p",[t._v("前面两项没有问题，最后一个报错了，如果继续修改，还是把测试用例"),a("strong",[t._v("全部")]),t._v("跑一遍，当你的测试用例很多的时候，运行时间也就越久，我们需要 Jest 只"),a("strong",[t._v("针对没有通过测试的用例")]),t._v("去运行")]),t._v(" "),a("p",[a("strong",[t._v("f: 只会去跑之前没有通过的测试")])]),t._v(" "),a("p",[t._v("只要我们在控制台按 f 就可以了")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ITxiaohao/blog-img/master/img/Jest/20190725142716.png",alt:""}})]),t._v(" "),a("p",[t._v("可以发现之前通过的两个测试用例前面的图标从 √ 变成了 ○ 并且跳过了这两个测试用例，只会测试 toThrow 这个用例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ITxiaohao/blog-img/master/img/Jest/20190725142741.png",alt:""}})]),t._v(" "),a("p",[t._v("如果出现 Watch Usage: Press w to show more. 只要按 w 就会出现更多信息")]),t._v(" "),a("p",[t._v("如果这个时候随便在代码中加一个回车，它就不会去跑所有的测试用例了，因为测试用例都已经通过了，没有错误，即便再改出了错误，Jest 也不会去测试了")]),t._v(" "),a("p",[t._v("如果要退出 f 这个模式，只需要再按一下 f")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ITxiaohao/blog-img/master/img/Jest/20190725142757.png",alt:""}})]),t._v(" "),a("p",[t._v("o：模式")]),t._v(" "),a("p",[t._v("Press o to only run tests related to changed files.")]),t._v(" "),a("p",[t._v("复制 matchers.test.js 到 "),a("strong",[t._v("matchers1.test.js")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ITxiaohao/blog-img/master/img/Jest/20190725142822.png",alt:""}})]),t._v(" "),a("p",[t._v("默认情况下会运行所有的测试文件，目前有 6 个测试用例都被跑了一遍，如果你只改 matchers1.test.js 里的文件，Jest 也会跑所有的测试文件，这其实是没有必要的，只需要跑我们当前修改的测试文件就可以了")]),t._v(" "),a("p",[t._v("使用 o 模式，它只会测试当前改变的文件")]),t._v(" "),a("p",[t._v("如果这时改了 matchers.test.js 和 matchers1.test.js，我们需要一个工具来帮我们记录改动了哪些文件")]),t._v(" "),a("p",[t._v("使用 "),a("strong",[t._v("git")]),t._v(" 来管理我们的代码")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("这个时候再运行 npm run test")]),t._v(" "),a("blockquote",[a("p",[t._v("No tests found related to files changed since last commit.")]),t._v(" "),a("p",[t._v("Press "),a("code",[t._v("a")]),t._v(" to run all tests, or run Jest with "),a("code",[t._v("--watchAll")])])]),t._v(" "),a("p",[t._v("会提示找不到与上次提交后更改的文件相关的测试，请按 a （All 模式） 会运行所有测试或使用 --watch 运行 jest")]),t._v(" "),a("p",[t._v("因为"),a("strong",[t._v("没有修改文件")]),t._v("，之提交一下代码到本地仓库")]),t._v(" "),a("p",[a("code",[t._v('git commit -m "version 1"')])]),t._v(" "),a("p",[t._v("重新运行 "),a("code",[t._v("npm run test")]),t._v("，修改 "),a("strong",[t._v("matchers.test.js")]),t._v(" 制造一个错误，标准模式下会测试 "),a("strong",[t._v("6")]),t._v(" 个用例，此时按 "),a("strong",[t._v("o")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ITxiaohao/blog-img/master/img/Jest/20190725142844.png",alt:""}})]),t._v(" "),a("p",[t._v("只会测试当前更改的文件中的 "),a("strong",[t._v("3")]),t._v(" 个用例，因为通过了 git 提交了代码，只要是在此基础上修改了文件，git 就能捕获到，Jest 也就知道了哪些文件被修改过，单独测试")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ITxiaohao/blog-img/master/img/Jest/20190725142903.png",alt:""}})]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("记住：o 模式是"),a("strong",[t._v("一定")]),t._v("要配置 "),a("strong",[t._v("git")]),t._v(" 去使用的")])]),t._v(" "),a("p",[t._v("还有一种方式，就是修改 "),a("strong",[t._v("package.json")])]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jest --watch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coverage"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jest --coverage"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("将 "),a("strong",[t._v("--watchAll")]),t._v(" 改为 "),a("strong",[t._v("--watch")]),t._v("，默认直接进入 "),a("strong",[t._v("o")]),t._v(" 模式")]),t._v(" "),a("p",[t._v("t：按测试用例名称的正则表达式来过滤哪些测试用例要执行")]),t._v(" "),a("p",[t._v("由于我们现在是 --watch 默认 o 模式，并且没有要更改的")]),t._v(" "),a("blockquote",[a("p",[t._v("No tests found related to files changed since last commit.")]),t._v(" "),a("p",[t._v("Press "),a("code",[t._v("a")]),t._v(" to run all tests, or run Jest with "),a("code",[t._v("--watchAll")])])]),t._v(" "),a("p",[t._v("要先进入 "),a("strong",[t._v("a")]),t._v(" 模式之后按 "),a("strong",[t._v("t")]),t._v(" 进入")]),t._v(" "),a("blockquote",[a("p",[t._v("Pattern Mode Usage")]),t._v(" "),a("p",[t._v("› Press Esc to exit pattern mode.")]),t._v(" "),a("p",[t._v("› Press Enter to filter by a tests regex pattern.")]),t._v(" "),a("p",[t._v("pattern ›")])]),t._v(" "),a("p",[t._v("打开 matchers.test.js，这里有个测试用例叫 toMatch，复制下来并回车")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ITxiaohao/blog-img/master/img/Jest/20190725143042.png",alt:""}})]),t._v(" "),a("p",[t._v("只会测试 toMatch 用例，其他的都被跳过了")]),t._v(" "),a("p",[t._v("t: 模式就是根据我们测试用例的名字去过滤")]),t._v(" "),a("p",[t._v("q: 就直接是退出对代码的监控")]),t._v(" "),a("p",[t._v("Enter： 重新运行测试")]),t._v(" "),a("p",[t._v("当你使用 --watchAll 的时候，就可以使用 p 模式，跟 t 模式类似，根据测试文件名来过滤")])])},[],!1,null,null,null);s.default=e.exports}}]);